# Requirements

* PHP
* Ruby/MySQL
* MySQL
* Ruby >= 1.8.7
* jRuby >= 1.6
** jruby's active record: $ jruby -S gem install activerecord
** jruby's mysql adaport: $ jruby -S gem install activerecord-jdbcmysql-adapter

# General notes

To kick off the job, use the following (edit as required)
$ /usr/local/jruby/bin/rake run:synthetic SYNTH_FUNC=add_chrs SYNTH_TIMES=1

SYNTH_FUNC are as follows
* drop_chrs
* add_chrs
* replace_chrs
* swap_adj_chr / swap_chrs

SYNTH_TIMES are as follows
* 1, 2, 3, 4.  Note, swap_adj_chr can only be 1, and swap_chrs can only be 2, 3, or 4.

Any files ending in _rspec.* should not be edited.  These are used by the testing suite to ensure all is well.

# Production

Setup a database called 'segments_tester'.  Internal tables will be managed by the program.

# Testing

Be sure to set the environment variable SEG_ENV to test via the command line.  Ex: $rake test:rspec SEG_ENV=test

Setup a testing database called 'segments_1234'.  Tables within this database will be dropped and recreated upon testing so do not store important data here.

Before calling rake test:rspec, you must first call rake test:setup.  You only need to call this once.  It'll setup all the required tables for testing.
